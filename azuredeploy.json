{
  "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion":"1.0.0.0",
  "parameters":{
    "vmName":{
      "type":"string",
      "metadata":{
        "description":"Name for the Virtual Machine."
      }
    },
    "adminUsername":{
      "type":"string",
      "metadata":{
        "description":"User name for the Virtual Machine."
      }
    },
    "adminPassword":{
      "type":"securestring",
      "metadata":{
        "description":"Password for the Virtual Machine."
      }
    },
    "adminEmail":{
      "type":"string",
      "metadata":{
        "description":"Used for notifications and SSL certificates."
      }
    },
    "dnsLabelPrefix":{
      "type":"string",
      "metadata":{
        "description":"An A record that starts with the specified label and resolves to this public IP address will be registered with the Azure-provided DNS servers. Example: mylabel.westus.cloudapp.azure.com."
      }
    },
    "licenseUsername":{
      "type":"string",
      "metadata":{
        "description":"ESET License username (EAV-XXXXXXXXXX)."
      }
    },
    "licensePassword":{
      "type":"securestring",
      "metadata":{
        "description":"ESET License password."
      }
    },
    "licenseFile":{
      "type":"string",
      "metadata":{
        "description":"ESET License File (Base64 encoded)."
      }
    },
    "webUsername":{
      "type":"string",
      "metadata":{
        "description":"ESET wwwi username."
      }
    },
    "webPassword":{
      "type":"securestring",
      "metadata":{
        "description":"ESET wwwi password."
      }
    },
    "emailDomain":{
      "type":"string",
      "metadata":{
        "description":"Domain to relay email for."
      }
    },
    "relayTo":{
      "type":"string",
      "metadata":{
        "description":"Hostname or IP to relay mail to."
      }
    }
  },
  "variables":{
    "ubuntuOSVersion":"16.04.0-LTS",
    "storageAccountName":"[concat(uniquestring(resourceGroup().id), 'esets')]",
    "imagePublisher":"Canonical",
    "imageOffer":"UbuntuServer",
    "nicName":"[concat(parameters('vmName'), '-vmNic')]",
    "addressPrefix":"10.0.0.0/16",
    "subnetName":"Subnet",
    "subnetPrefix":"10.0.0.0/24",
    "storageAccountType":"Standard_LRS",
    "publicIPAddressName":"[concat(parameters('vmName'), '-publicIp')]",
    "publicIPAddressType":"Static",
    "vmExtensionName":"esetsVmExtension",
    "vmSize":"Standard_A0",
    "virtualNetworkName":"[concat(parameters('vmName'), '-VNET')]",
    "networkSecurityGroupName":"[concat(parameters('vmName'), '-networkSecurityGroup')]",
    "vnetID":"[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef":"[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "customScriptFilePath":"https://raw.githubusercontent.com/d-maasland/azure-relay/master/deploy-esets.sh",
    "customScriptCommandToExecute":"/bin/bash deploy-esets.sh",
    "apiVersion":"2017-10-01"
  },
  "resources":[
    {
      "apiVersion":"[variables('apiVersion')]",
      "type":"Microsoft.Network/networkSecurityGroups",
      "name":"[variables('networkSecurityGroupName')]",
      "location":"[resourceGroup().location]",
      "properties":{
        "SecurityRules":[
          {
            "name":"AllowSmtp",
            "properties":{
              "description":"Allow SMTP",
              "protocol":"Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRange":"25",
              "destinationAddressPrefix":"*",
              "access":"Allow",
              "direction":"Inbound",
              "priority":100
            }
          },
          {
            "name":"AllowHttps",
            "properties":{
              "description":"Allow HTTPS",
              "protocol":"Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRange":"443",
              "destinationAddressPrefix":"*",
              "access":"Allow",
              "direction":"Inbound",
              "priority":200
            }
          },
          {
            "name":"AllowSsh",
            "properties":{
              "description":"Allow SSH access",
              "protocol":"Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRange":"22",
              "destinationAddressPrefix":"*",
              "access":"Allow",
              "direction":"Inbound",
              "priority":300
            }
          },
          {
            "name":"AllowHttp",
            "properties":{
              "description":"Allow HTTP access for certbot",
              "protocol":"Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationPortRange":"80",
              "destinationAddressPrefix":"*",
              "access":"Allow",
              "direction":"Inbound",
              "priority":400
            }
          }
        ]
      }
    },
    {
      "type":"Microsoft.Storage/storageAccounts",
      "name":"[variables('storageAccountName')]",
      "apiVersion":"[variables('apiVersion')]",
      "location":"[resourceGroup().location]",
      "sku":{
        "name":"[variables('storageAccountType')]"
      },
      "kind":"Storage"
    },
    {
      "apiVersion":"[variables('apiVersion')]",
      "type":"Microsoft.Network/publicIPAddresses",
      "name":"[variables('publicIPAddressName')]",
      "location":"[resourceGroup().location]",
      "properties":{
        "publicIPAllocationMethod":"[variables('publicIPAddressType')]",
        "dnsSettings":{
          "domainNameLabel":"[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion":"[variables('apiVersion')]",
      "type":"Microsoft.Network/virtualNetworks",
      "name":"[variables('virtualNetworkName')]",
      "location":"[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties":{
        "addressSpace":{
          "addressPrefixes":[
            "[variables('addressPrefix')]"
          ]
        },
        "subnets":[
          {
            "name":"[variables('subnetName')]",
            "properties":{
              "addressPrefix":"[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion":"[variables('apiVersion')]",
      "type":"Microsoft.Network/networkInterfaces",
      "name":"[variables('nicName')]",
      "location":"[resourceGroup().location]",
      "dependsOn":[
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties":{
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations":[
          {
            "name":"ipconfig1",
            "properties":{
              "privateIPAllocationMethod":"Dynamic",
              "publicIPAddress":{
                "id":"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet":{
                "id":"[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion":"2017-12-01",
      "type":"Microsoft.Compute/virtualMachines",
      "name":"[parameters('vmName')]",
      "location":"[resourceGroup().location]",
      "dependsOn":[
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties":{
        "hardwareProfile":{
          "vmSize":"[variables('vmSize')]"
        },
        "osProfile":{
          "computerName":"[parameters('vmName')]",
          "adminUsername":"[parameters('adminUsername')]",
          "adminPassword":"[parameters('adminPassword')]"
        },
        "storageProfile":{
          "imageReference":{
            "publisher":"[variables('imagePublisher')]",
            "offer":"[variables('imageOffer')]",
            "sku":"[variables('ubuntuOSVersion')]",
            "version":"latest"
          },
          "osDisk":{
            "createOption":"FromImage"
          }
        },
        "networkProfile":{
          "networkInterfaces":[
            {
              "id":"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile":{
          "bootDiagnostics":{
            "enabled":true,
            "storageUri":"[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))).primaryEndpoints.blob)]"
          }
        }
      }
    },
    {
      "type":"Microsoft.Compute/virtualMachines/extensions",
      "name":"[concat(parameters('vmName'), '/', variables('vmExtensionName'))]",
      "apiVersion":"2017-12-01",
      "location":"[resourceGroup().location]",
      "dependsOn":[
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties":{
        "publisher":"Microsoft.Azure.Extensions",
        "type":"CustomScript",
        "typeHandlerVersion":"2.0",
        "autoUpgradeMinorVersion":true,
        "settings":{
          "fileUris":[
            "[variables('customScriptFilePath')]"
          ],
          "commandToExecute":"[concat(variables('customScriptCommandToExecute'), ' ', parameters('licenseUsername'), ' ', parameters('licensePassword'), ' ', parameters('licenseFile'), ' ', parameters('webUsername'), ' ', parameters('webPassword'), ' ', parameters('adminEmail'), ' ', parameters('emailDomain'), ' ', parameters('relayTo'), ' ', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),providers('Microsoft.Network', 'publicIPAddresses').apiVersions[0]).dnsSettings.fqdn)]"
        }
      }
    }
  ]
}
